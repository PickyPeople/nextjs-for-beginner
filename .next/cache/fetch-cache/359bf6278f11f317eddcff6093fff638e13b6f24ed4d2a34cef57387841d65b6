{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"859c2991eeb152a1-LAX","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Fri, 23 Feb 2024 02:50:37 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=UC%2FF4%2Fh%2BqiRxYAlZa2wcGuNAlAl%2BbfnCBpQUkEdlbdeLHOIyReEpcL2lw6J0ldGUvFONQsuUQNFzMkR%2BpMlIwiPgk6Q%2BgFhX%2BBaHKilg5%2BiRCK5OiTIaZFYl6wZHZB%2BVzz6JFSlXzvHPSUjN99KJE%2FBM7SJv5l4%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}